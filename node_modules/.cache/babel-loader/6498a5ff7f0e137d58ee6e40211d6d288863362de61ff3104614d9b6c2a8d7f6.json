{"ast":null,"code":"// import logo from './logo.svg';\nimport{useState}from'react';import'./App.css';import Navbar from'./components/Navbar';import TextForm from'./components/TextForm';import Alert from'./components/Alert';// import About from './components/About';\n// import {Routes,Route} from 'react-router-dom'\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState('light');const[alert,setAlert]=useState(null);// const router = createBrowserRouter([\n//   {\n//     path: \"/About\",\n//     element:<><About/></>,\n//   },\n// ]);\nconst showAlert=(message,type)=>{setAlert({msg:message,type:type});};const toggleMode=()=>{if(mode==='dark'){setMode('light');showAlert(\"Dark Mode disable\",\"alert\");document.body.classList.add('bg-light','text-dark');document.body.classList.remove('bg-dark','text-light');}else{setMode('dark');showAlert(\"Dark Mode disable\",\"danger\");document.body.classList.add('bg-dark','text-light');document.body.classList.remove('bg-light','text-dark');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtlis\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(TextForm,{heading:\"Enter The Text\"})]})]});}export default App;","map":{"version":3,"names":["useState","Navbar","TextForm","Alert","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","classList","add","remove","children","title","className","heading"],"sources":["D:/HTML AND CSS/TextUtliProject/TextUtils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {Routes,Route} from 'react-router-dom'\n\n\nfunction App() {\n  const [mode,setMode]= useState('light');\n\n\n\n  const [alert, setAlert] = useState(null);\n\n\n  // const router = createBrowserRouter([\n  //   {\n  //     path: \"/About\",\n  //     element:<><About/></>,\n  //   },\n  // ]);\n\n  const showAlert =(message,type)=>\n    {\n      setAlert(\n        {\n          msg : message,\n          type : type\n        }\n      )\n    } \n \n\n  const toggleMode  = ()=>\n    {\n      if(mode ==='dark')\n        {\n          setMode('light');\n          showAlert(\"Dark Mode disable\",\"alert\");\n          document.body.classList.add('bg-light','text-dark');\n          document.body.classList.remove('bg-dark','text-light');\n          \n          }\n          else\n          {\n            setMode('dark');\n            showAlert(\"Dark Mode disable\",\"danger\");\n          document.body.classList.add('bg-dark','text-light');\n          document.body.classList.remove('bg-light','text-dark');\n        }\n    }\n  \n  return (\n    <>\n      <Navbar title=\"TextUtlis\" mode={mode} toggleMode={toggleMode}/>\n      <div className=\"container\">\n       <Alert alert={alert}/>\n      <TextForm heading =\"Enter The Text\" /> \n        {/* <Routes>       */}\n          {/* <Route path='/' element={<><Alert alert={alert}/> <TextForm heading =\"Enter The Text\" /> </>} /> */}\n      {/* <RouterProvider router={router} /> */}\n        {/* <Route exact path='/About.js' element={<About/>}/> */}\n      {/* </Routes> */}\n\n      </div>\n    </>\n\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAGA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAACC,OAAO,CAAC,CAAEZ,QAAQ,CAAC,OAAO,CAAC,CAIvC,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAGxC;AACA;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAe,SAAS,CAAEA,CAACC,OAAO,CAACC,IAAI,GAC5B,CACEH,QAAQ,CACN,CACEI,GAAG,CAAGF,OAAO,CACbC,IAAI,CAAGA,IACT,CACF,CAAC,CACH,CAAC,CAGH,KAAM,CAAAE,UAAU,CAAIA,CAAA,GAClB,CACE,GAAGR,IAAI,GAAI,MAAM,CACf,CACEC,OAAO,CAAC,OAAO,CAAC,CAChBG,SAAS,CAAC,mBAAmB,CAAC,OAAO,CAAC,CACtCK,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CACnDH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAEtD,CAAC,IAED,CACEZ,OAAO,CAAC,MAAM,CAAC,CACfG,SAAS,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CACzCK,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC,YAAY,CAAC,CACnDH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CACxD,CACJ,CAAC,CAEH,mBACEjB,KAAA,CAAAE,SAAA,EAAAgB,QAAA,eACEpB,IAAA,CAACJ,MAAM,EAACyB,KAAK,CAAC,WAAW,CAACf,IAAI,CAAEA,IAAK,CAACQ,UAAU,CAAEA,UAAW,CAAC,CAAC,cAC/DZ,KAAA,QAAKoB,SAAS,CAAC,WAAW,CAAAF,QAAA,eACzBpB,IAAA,CAACF,KAAK,EAACU,KAAK,CAAEA,KAAM,CAAC,CAAC,cACvBR,IAAA,CAACH,QAAQ,EAAC0B,OAAO,CAAE,gBAAgB,CAAE,CAAC,EAOjC,CAAC,EACN,CAAC,CAGP,CAEA,cAAe,CAAAlB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}