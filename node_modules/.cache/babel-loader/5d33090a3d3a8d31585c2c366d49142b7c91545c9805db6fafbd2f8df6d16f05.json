{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML AND CSS\\\\TextUtliProject\\\\TextUtils\\\\textutils\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const handleOnchange = event => {\n    setText(event.target.value);\n  };\n  const UperCaseconverter = () => {\n    console.log(text);\n    let Newtext = text.toUpperCase();\n    setText(Newtext);\n  };\n  const wordCount = text.split(/\\s+/).filter(element => element.length !== 0).length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter Something\",\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnchange,\n          id: \"myBox\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: UperCaseconverter,\n      children: \"Convert to UpperCase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Word is \", wordCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Character is \", text.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" noraml timetaken to read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time - \", 0.008 * wordCount, \"min\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"/31x6IKLd9hKJNRoFN2Lb7ghI70=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","text","setText","handleOnchange","event","target","value","UperCaseconverter","console","log","Newtext","toUpperCase","wordCount","split","filter","element","length","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","id","rows","onClick","_c","$RefreshReg$"],"sources":["D:/HTML AND CSS/TextUtliProject/TextUtils/textutils/src/components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n     const [text,setText] = useState(\"\");\r\n     const handleOnchange =(event)=>\r\n          {\r\n               setText(event.target.value)\r\n               \r\n          }\r\n     const UperCaseconverter = ()=>\r\n          {\r\n               console.log(text);\r\n               let Newtext = text.toUpperCase();\r\n               setText(Newtext);\r\n          }\r\n\r\n          const wordCount = text.split(/\\s+/).filter((element) => element.length !== 0).length;\r\n     return (\r\n\r\n          <>\r\n               <div className='container'>\r\n                    <h1>{props.heading}</h1>\r\n                    <div className=\"mb-3\">\r\n                         <textarea placeholder='Enter Something' className=\"form-control\" value={text} onChange={handleOnchange} id=\"myBox\" rows=\"10\"></textarea>\r\n                    </div>\r\n               </div>\r\n               <button className=\"btn btn-primary\" onClick={UperCaseconverter}>Convert to UpperCase</button>\r\n               <div className=\"container\">\r\n                    <h3>Text Summary</h3>\r\n                    <p>Word is {wordCount}</p>\r\n                    <p> Character is {text.length}</p>\r\n                    \r\n                    <h1> noraml timetaken to read</h1>\r\n                    <p>Time - {0.008 * wordCount}min</p>\r\n\r\n                    <h2>Preview</h2>\r\n                    <p>{text}</p>\r\n               </div>\r\n          </>\r\n\r\n     )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}