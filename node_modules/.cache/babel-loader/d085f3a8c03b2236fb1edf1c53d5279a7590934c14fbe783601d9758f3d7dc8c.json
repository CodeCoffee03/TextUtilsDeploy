{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML AND CSS\\\\TextUtliProject\\\\TextUtils\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport { Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  // const router = createBrowserRouter([\n  //   {\n  //     path: \"/About\",\n  //     element:<><About/></>,\n  //   },\n  // ]);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'dark') {\n      setMode('light');\n      showAlert(\"Dark Mode disable\", \"alert\");\n      document.body.classList.add('bg-light', 'text-dark');\n      document.body.classList.remove('bg-dark', 'text-light');\n    } else {\n      setMode('dark');\n      showAlert(\"Dark Mode disable\", \"danger\");\n      document.body.classList.add('bg-dark', 'text-light');\n      document.body.classList.remove('bg-light', 'text-dark');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtlis\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Alert, {\n              alert: alert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 38\n            }, this), \" \", /*#__PURE__*/_jsxDEV(TextForm, {\n              heading: \"Enter The Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 61\n            }, this), \" \"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/About.js\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"9NTKcJ11NClCY8iNfVhjrrH6X6I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","TextForm","Alert","About","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","classList","add","remove","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","heading","_c","$RefreshReg$"],"sources":["D:/HTML AND CSS/TextUtliProject/TextUtils/textutils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport {Routes,Route} from 'react-router-dom'\n\n\nfunction App() {\n  const [mode,setMode]= useState('light');\n\n\n\n  const [alert, setAlert] = useState(null);\n\n\n  // const router = createBrowserRouter([\n  //   {\n  //     path: \"/About\",\n  //     element:<><About/></>,\n  //   },\n  // ]);\n\n  const showAlert =(message,type)=>\n    {\n      setAlert(\n        {\n          msg : message,\n          type : type\n        }\n      )\n    } \n \n\n  const toggleMode  = ()=>\n    {\n      if(mode ==='dark')\n        {\n          setMode('light');\n          showAlert(\"Dark Mode disable\",\"alert\");\n          document.body.classList.add('bg-light','text-dark');\n          document.body.classList.remove('bg-dark','text-light');\n          \n          }\n          else\n          {\n            setMode('dark');\n            showAlert(\"Dark Mode disable\",\"danger\");\n          document.body.classList.add('bg-dark','text-light');\n          document.body.classList.remove('bg-light','text-dark');\n        }\n    }\n  \n  return (\n    <>\n      <Navbar title=\"TextUtlis\" mode={mode} toggleMode={toggleMode}/>\n      <div className=\"container\">\n        <Routes>      \n          <Route path='/' element={<><Alert alert={alert}/> <TextForm heading =\"Enter The Text\" /> </>} />\n      {/* <Alert alert={alert}/>\n      <TextForm heading =\"Enter The Text\" />  */}\n      {/* <RouterProvider router={router} /> */}\n        <Route path='/About.js' element={<About/>}/>\n      </Routes>\n\n      </div>\n    </>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}